// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  ooutput       = "./node_modules/@prisma/client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model RuralProducer {
  id             String       @id @default(uuid())
  documentNumber String       @unique
  documentType   DocumentType
  name           String
  properties     Farm[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  isActive       Boolean      @default(true)

  @@map("ruralProducer")
}

enum DocumentType {
  cpf
  cnpj
}

model Farm {
  id                      String        @id @default(uuid())
  name                    String
  city                    String
  state                   String
  totalAreaInHectares     Float
  vegetableAreaInHectares Float
  arableAreaInHectares    Float
  producerId              String
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
  producer                RuralProducer @relation(fields: [producerId], references: [id])
  isActive                Boolean       @default(true)
  harvest                 Harvest[]

  @@unique([producerId, name])
  @@index([state])
  @@index([producerId])
  @@map("farm")
}

model Harvest {
  id           String        @id @default(uuid())
  harverstYear Int
  farmId       String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  farm         Farm          @relation(fields: [farmId], references: [id])
  cultivation  Cultivation[]

  @@unique([farmId, harverstYear])
  @@index([farmId])
  @@map("harvest")
}

model Cultivation {
  id        Int      @id @default(autoincrement())
  name      String
  harvestId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  harvest   Harvest  @relation(fields: [harvestId], references: [id])

  @@index([name])
  @@map("cultivation")
}
